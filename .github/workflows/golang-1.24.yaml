name: golang-1.24 docker container image creation

env:
  IMAGE_NAME: golang
  IMAGE_TAG: 1.24

on:
  push:
    branches:
      - 'main'
    paths:
      - 'docker/**'
      - '.github/workflows/golang-1.24.yaml'
  schedule:
    - cron: '0 19 * * *'
jobs:
  get-go-version:
    name: Get latest Go 1.24.x version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go-version.outputs.version }}
    steps:
      - name: Get latest Go 1.24 version
        id: go-version
        run: |
          # Go公式のダウンロードページからバージョン一覧を取得
          VERSIONS=$(curl -s https://go.dev/dl/?mode=json&include=all)
          # 1.24系の最新安定版を取得（rcやbetaを除外）
          LATEST=$(echo "$VERSIONS" | jq -r '.[] | select(.version | startswith("go1.24")) | select(.stable == true) | .version' | head -1 | sed 's/^go//')
          echo "Latest Go 1.24.x version: $LATEST"
          echo "version=$LATEST" >> $GITHUB_OUTPUT

  build:
    name: Build docker image for ${{ matrix.platform }}
    runs-on: ubuntu-latest
    needs: get-go-version
    strategy:
      matrix:
        platform:
          - linux/arm64
          - linux/amd64
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Docker Build and Push by Platform
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: ${{ matrix.platform }}
          context: ./docker
          tags: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-${{ matrix.platform == 'linux/arm64' && 'arm64' || 'amd64' }}
          build-args: |
            USER_NAME=${{ vars.CONTAINER_USER_NAME || 'devuser' }}
            GOLANG_VERSION=${{ needs.get-go-version.outputs.version }}
  
  push-manifest:
    name: Create and push multi-platform manifest
    runs-on: ubuntu-latest
    needs: [get-go-version, build]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create and push manifest
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-amd64
